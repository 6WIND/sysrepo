/**
@page xp_page XPath Addressing

The aim of this section is to describe the xpath syntax used for identification of yang nodes in sysrepo calls. 
The xpath identifying a node contains the names of all hierarchically preceeding nodes up to the model top-level node. 
The top-level node in xpath must be qualified with a namespace, which is the name of the module. 
The module name must be also specified for the augment node. It is not required to specify module names for other 
nodes explicitly. The xpath must start with the slash character.

@section ex Examples
@subsection container Container
Following xpath expression identifies the @b container node inside the @b model.
@code
/model:container
@endcode

To retrieve all children (nodes with parent node /model:container) element use
@code
/model:container/*
@endcode

If you want to retrieve all nodes in container subtree, including deeper levels
use:
@code
/model:container//*
@endcode


@subsection list List
Identification of the particular list instance
@code
/model:container/list[key1='a'][key2='b']
@endcode

Identification of the list. It can be used to list all list instances.
@code
/model:container/list
@endcode

@subsection leaf Leaf (leaf-list)
Identification of the leaf. All keys must be specified.
@code
/model:container/list[key1='a'][key2='b']/leaf
@endcode

Explicitely specified namespace for the augment node.
@code
/model:container/list[key1='a'][key2='b']/another-model:added-leaf
@endcode

@subsection module Whole module
Following xpath expression can be used to retrieve all top-level nodes in a @b module.
@code
/model:*
@endcode

*/
